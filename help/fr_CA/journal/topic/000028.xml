<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic SYSTEM "../../../topic.dtd">

<!--
  * 000028.xml
  *
  * Copyright (c) 2003-2010 John Willinsky
  * Distributed under the GNU GPL v2. For full terms see the file docs/COPYING.
  *
  * Management Pages - Reading Tools - Contexts
  *
  * $Id$
  -->

<topic id="journal/topic/000028" locale="fr_CA" title="Contextes" toc="journal/toc/000005" key="journal.managementPages.readingTools.contexts">
	<section>
		<![CDATA[<p>Chaque série d’outils de lecture est faite d’outils individuels (i.e. Études apparentées, Forums en ligne, etc.) avec chaque outil consistant en un nombre de bases de données pertinentes regroupées dans un contexte. Ces banques de données, et les contextes  dans lesquels elles sont organisées peuvent être crées, modifiées ou supprimées.</p><p><em>Métadonnées pour des articles dans un contexte</em>. Le directeur du journal peut modifier le nom d’un outil. Il y a aussi une option pour déterminer si les mots clés de l’auteur (par défaut), le nom de l’auteur (i.e. pour utilisation avec les autres ouvrages de l’auteur), ou  si des termes d’indexation géographiques seront utilisés pour la recherche de la banque de données. Une autre option utilisée avec ‘’Définition des termes’’ permet au lecteur de choisir et sélectionner un terme de recherche en double-cliquant sur n’importe quel mot dans le texte de l’article étant lu dans le journal. Le directeur du journal peut utiliser ces options en construisant ses propres outils de lecture.</p><p><em>Modifier les recherches pour chaque outil</em>. En utilisant «Recherches», le directeur du journal peut modifier ou supprimer l’adresse URL pour chacune des banques de données dans un outil, ainsi que réorganisé les banques de données qui apparaissent dans l’outil. Pour chaque banque de données, l’adresse URL est fournie ce qui permet au lecteur d’en apprendre plus au sujet de la banque de données, et une adresse URL à cet effet permet de faire la recherche. Il y a deux types de recherches qui peuvent être réglées, une recherche GET, et si çà ne fonctionne pas avec la banque de données, une recherche POST peut aussi être faite.</p>]]>
	</section>
	<section title="Recherches GET">
		<![CDATA[<p>Pour les recherches GET,  exécuter une recherche et regarder l’adresse URL qui en résulte . Par exemple, avec Google, une recherche pour ‘’FOOBAR’’ donne l’adresse URL</p><p><samp class="code">http://www.google.ca/search?hl=en&q=FOOBAR&meta=</samp></p><p>Remplacer le terme de recherche FOOBAR par la variable &#123;$formKeywords&#125. Lorsque OJS rencontrera cette variable, il la remplacera par la valeur appropriée des métadonnées de l’article. Ceci nous donne une recherche URL de</p><p><samp class="code">http://www.google.ca/search?hl=en&q=&#123;$formKeywords&#125;&meta=</samp></p><p>pour le RT. Cependant, vu que les autres paramètres ne sont pas nécessaires dans ce cas-ci, on peut donc utiliser une adresse URL simplifiée de<p><samp class="code">http://www.google.ca/search?q=&#123;$formKeywords&#125;</samp></p><p>for the RT.</p>]]>
	</section>
	<section title="Recherches POST">
		<![CDATA[<p>Pour les formes POST, c’est un peu plus compliqué. Encore une fois, en regardant dans Google, vous pouvez voir la source de la page, et remarquer<samp class="code">&lt;form action="/search" ...&gt;</samp>, vous donnant une base de départ du URL<samp class="code">http://www.google.com/search</samp>. Vous pouvez alors regarder chacun des<samp class="code">&lt;input ...&gt;</samp> and<samp class="code">&lt;select ... &gt;</samp> éléments dans la forme, et les ajouter comme<samp class="code">name=value</samp> pairs separated by<samp class="code">&</samp> à la fin de l’adresse URL. L’élément  qui spécifie la zone de texte qui accepte l’entrée de texte par l’usager (dans le cas de Google,<samp class="code">q</samp>), devrait encore une fois avoir une valeur de&#123;$formKeywords&#125;, laquelle sera remplacée par la valeur appropriée.</p><p>Une façon un peu plus facile pour les formulaires POST est de copier la source HTML dans un fichier, et changer<samp class="code">method=post</samp> to<samp class="code">method=get</samp> dans le champ approprié du formulaire, et de changer la<samp class="code">action=</samp> valeur de façon à ce qu’elle soit une adresse URL complète, comme<samp class="code">http://www.google.com/search</samp> plutôt que seulement<samp class="code">/search</samp>. Vous pouvez alors voir le fichier HTML modifié dans votre navigateur et utiliser la méthode GET ci-haut pour construire l’adresse URL</p><p>Comme certains moteurs de recherche ne supportent pas les demandes faites en GET, si vous trouvez que la méthode ci-haut ne fonctionne pas, vous pouvez entrer des données de formulaire POST dans le champ ‘’Rechercher des données post ‘’. Si l’exemple ci-haut demande que les données soient affichées, vous entreriez<samp class="code">http://www.google.com/search</samp> pour l’adresse URL de la recheerche et <samp class="code">q=&#123;$formKeywords&#125;</samp> pour afficher les données.</p><p>Assurez-vous de tester les adresses URL pour vous assurer qu’elles fonctionnent correctement, en remplaçant &#123;$formKeywords&#125; par un terme dans l’adresse URL et en le testant pour voir si il montre les résultats de recherche escomptés. Noter qu’avec les formes POST çà ne peut pas être toujours possible, dépendant du site. Pour les adresses URL qui n’ont pas de moteurs de recherche appropriés, une autre possibilité est d’utiliser Google et de restreindre par site. Vous pouvez utiliser une demande comme <samp class="code">site:mysite.com FOOBAR</samp> dans Google pour chercher le terme ‘’FOOBAR’’ seulement à l’intérieur de Mysite.com.  Ceci est utilisé dans plusieurs RT pour plusieurs sites.</p>]]>
	</section>
</topic>
